<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Arbor</title>
  <generator uri="https://github.com/jekyll/jekyll">Jekyll v3.8.4</generator>
    <icon>/apple-touch-icon-precomposed.png</icon>
  <subtitle>Arbor workflows</subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="/" rel="alternate" type="text/html"/>
  <updated>2018-09-25T16:44:18-04:00</updated>
  <id>/</id>
  <author>
    <name>Luke Harmon</name>
    <uri>/</uri>
    <email>lukeh@uidaho.edu</email>
  </author>

  
  <entry>
    <title>Using PhyloPen</title>
    <link href="/tutorials/Using-PhyloPen/"/>
    <updated>2018-09-21T00:00:00-04:00</updated>
    <id>/tutorials/Using PhyloPen</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;evaluating-phylopen&quot;&gt;Evaluating PhyloPen&lt;/h2&gt;

&lt;p&gt;Please try the following exercise to evaluate the current version of our new application PhyloPen. PhyloPen is an interface that lets you interact with a phylogenetic tree and a matching trait matrix to explore features about organisms and their relationships to each other.&lt;/p&gt;

&lt;p&gt;If you have any difficulties during the exercises, please feel free to ask for assistance. Also, remember
to consult the tables that show what gestures can be performed in PhyloPen (i.e., pen and multitouch gestures.)&lt;/p&gt;

&lt;p&gt;Before starting, please complete this pre-activity &lt;a href=&quot;https://docs.google.com/forms/d/1sKxdYsaRTeQTpsUTFE3H77uYpZe08xOjyj_n_YEAOhc/edit?ts=5ba2af03&quot; target=&quot;_blank&quot;&gt;survey&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The instructions for PhyloPen are &lt;a href=&quot;/assets/PhyloPen/exercise.instructions.phylopen.Sept2018.pdf&quot;&gt;here&lt;/a&gt;. Download and save this file somewhere to your computer. Follow these instructions to test the various capabilities of PhyloPen using the supplied tablet.&lt;/p&gt;

&lt;p&gt;Next, attempt to complete the same tasks in Mesquite using these &lt;a href=&quot;/assets/PhyloPen/exercise.instructions.mesquite.Sept.2018.pdf&quot;&gt;instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you have completed the exercises, please provide feedback using this post-activity &lt;a href=&quot;https://docs.google.com/forms/d/1Xe3d0uOOalzmPhpkF-BRYR5YOTCkqQ0L9_Co-bjDGLY/edit?ts=5ba30ebb&quot; target=&quot;_blank&quot;&gt;survey&lt;/a&gt;&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Obtain a Tree from Open Tree of Life</title>
    <link href="/tutorials/Use_Open_Tree/"/>
    <updated>2018-09-21T00:00:00-04:00</updated>
    <id>/tutorials/Use_Open_Tree</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;use-web-services-to-obtain-a-tree-from-opentree&quot;&gt;Use Web Services to Obtain a Tree from OpenTree&lt;/h2&gt;

&lt;p&gt;Web services are protocols for computers to exchange information over the web (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_service&quot;&gt;wikipedia: web service&lt;/a&gt;), typically via an &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_programming_interface&quot;&gt;API&lt;/a&gt;. In biology, web services are becoming more and more common. You can obtain, for example, phylogenetic trees from &lt;a href=&quot;http://opentreeoflife.org/&quot;&gt;Open Tree of Life&lt;/a&gt;, geographic occurrences from &lt;a href=&quot;http://www.gbif.org/&quot;&gt;GBIF&lt;/a&gt;, and trait data from &lt;a href=&quot;http://eol.org/&quot;&gt;Encyclopedia of Life&lt;/a&gt;, all using web services.&lt;/p&gt;

&lt;p&gt;We have a number of pre-made functions in Arbor that can obtain data through web services. These functions can be included in workflows that make it easy to combine your data with data obtained over the web and carry out analyses. In this tutorial we will illustrate one of these applications, starting with a list of species and obtaining a phylogenetic tree from Open Tree of Life.&lt;/p&gt;

&lt;h2 id=&quot;example-from-a-list-of-species-to-a-phylogenetic-tree&quot;&gt;Example: from a list of species to a phylogenetic tree&lt;/h2&gt;

&lt;p&gt;We are going to start with a list of species. You can obtain this list as a csv file &lt;a href=&quot;/assets/mammal_species_list.csv&quot;&gt;here&lt;/a&gt;; download and save this file somewhere to your computer.&lt;/p&gt;

&lt;p&gt;Now, open an Arbor instance (e.g. &lt;a href=&quot;http://arbor.arborworkflows.com&quot;&gt;Arbor web app&lt;/a&gt;). You will now need to load in your species list. You can do this by dragging the file that you just downloaded onto the “Browse or drop files” box:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen1.png&quot; alt=&quot;screen1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(you can also see our tutorial on &lt;a href=&quot;/tutorials/using-the-arbor-webapp/&quot;&gt;using the Arbor webapp&lt;/a&gt;) for more information on loading data into Arbor)&lt;/p&gt;

&lt;p&gt;We will be building a workflow to do this analysis. Note that you need to be logged in and have write access to a collection to make the next parts work!&lt;/p&gt;

&lt;p&gt;Click over to the “Analysis” tab, and create a new workflow. To do that, type the name of the new workflow it the box under “Create new analysis.” Let’s call our workflow “getOTLTreeAndPlot.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen2.png&quot; alt=&quot;screen2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you have created the workflow, you should be able to view and edit (but right now it is just a blank white space!)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen3.png&quot; alt=&quot;screen3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first step in this workflow is to match the species names with the names in the Open Tree of Life Taxonomy (OTT). To do this, we will use a function in the “fxOpenTree” collection called “Lookup Names Using OpenTree Taxonomy.” Add this function to your workflow using the “+ add to workflow” button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen4.png&quot; alt=&quot;screen4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can click the tab on the left side of that new workflow step to indicate that the user will send a data table directly to this function. So our workflow is now:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen5.png&quot; alt=&quot;screen5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we need to pull out an “induced subtree” from open tree of life using the OTT ids that we obtained in the previous step. To do that, add a new function to your workflow, again from the “fxOpenTree” collection: “Return the OpenTree subtree from a table of OTL node IDs.” Add and connect that next step to your workflow:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen6.png&quot; alt=&quot;screen6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Add a step to standardize the branch lengths of your tree using the module called “Make Fake Branch Lengths,” also in the “fxOpenTree” collection.&lt;/p&gt;

&lt;p&gt;Now we just need to plot our resulting tree. You can use a function from the “fxPhylogenyTools” collection called “PlotTreeWithApe.” Add that function, connect it to your workflow, and specify that the last output be sent to the user:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/ott.completed.wf.png&quot; alt=&quot;screen7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now just click “Setup and run.” In the box that appears, choose your input file with the list of mammal species names.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen8.png&quot; alt=&quot;screen8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The workflow will run for a while:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen9.png&quot; alt=&quot;screen9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And then finish:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen10.png&quot; alt=&quot;screen10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can then change to the “visualization” tab, and select the output from your workflow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen11.png&quot; alt=&quot;screen11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We then see the final result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen12.png&quot; alt=&quot;screen12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a phylogenetic tree pulled from the Open Tree of Life synthesis that includes all of the species in the table that you supplied.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Introduction to a New Arbor Interface</title>
    <link href="/tutorials/New-Interface-Tutorial/"/>
    <updated>2018-09-20T00:00:00-04:00</updated>
    <id>/tutorials/New-Interface-Tutorial</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;use-a-new-interface-to-work-with-arbor-apps&quot;&gt;Use a new interface to work with Arbor apps&lt;/h2&gt;

&lt;p&gt;This tutorial will help you use a new Arbor interface.&lt;/p&gt;

&lt;h2 id=&quot;step-1&quot;&gt;Step 1&lt;/h2&gt;

&lt;p&gt;First go here and create a user account: (see register in the top right corner)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://54.82.147.249:8080&quot;&gt;http://54.82.147.249:8080&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-2&quot;&gt;Step 2&lt;/h2&gt;

&lt;p&gt;Email Curt (curtislisle@gmail.com) that you have a login, so that he can add you to a user group that can run tasks.&lt;/p&gt;

&lt;h2 id=&quot;step-3&quot;&gt;Step 3&lt;/h2&gt;

&lt;p&gt;Navigate to this address (same root with /arbor_apps at the end).&lt;br /&gt;
&lt;a href=&quot;http://54.82.147.249:8080/arbor_apps/&quot;&gt;http://54.82.147.249:8080/arbor_apps/]&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-4&quot;&gt;Step 4&lt;/h2&gt;

&lt;p&gt;The way to try the interface is to load a tree &amp;amp; matrix, then pick a function to run.   To load the tree and matrix, click the tabs at the bottom of the blue bar (e.g. PHYLOGENETIC TREE).  This moves to the “current tree” panel, which will initially be empty.  Next, click on the title “Phylogenetic ‘Tree (.phy)” below (with the white background).  This should open a dialog that lets you browse any collections on this instance for data.  There is an “example data” collection with trees and matrices in it.&lt;/p&gt;

&lt;h2 id=&quot;step-5&quot;&gt;Step 5&lt;/h2&gt;

&lt;p&gt;Repeat this process to load a character matrix.&lt;/p&gt;

&lt;h2 id=&quot;step-6&quot;&gt;Step 6&lt;/h2&gt;

&lt;p&gt;Other tabs should appear on the blue bar for each easy-mode function loaded.  Select one of these and click the column from the matrix you want to use to perform the operation.&lt;/p&gt;

&lt;h2 id=&quot;step-7&quot;&gt;Step 7&lt;/h2&gt;

&lt;p&gt;You should see a green “progress circle” with status next to it, like Queued, Running, Pushing Output, and then the output of the method should display.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Kembel Biodiversity Workflow</title>
    <link href="/tutorials/Kembel-documentation/"/>
    <updated>2018-09-10T00:00:00-04:00</updated>
    <id>/tutorials/Kembel-documentation</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;use-r-package-picante-to-explore-and-analyze-community-data&quot;&gt;Use R package ‘picante’ to explore and analyze community data.&lt;/h2&gt;

&lt;p&gt;This tutorial will guide the user through Steven Kembel’s biodiversity workflow developed for the R package ‘picante’.  Picante allows users to analyze community ecology data sets in a multivariate and phylogenetic context.&lt;/p&gt;

&lt;p&gt;Documentation for picante can be found at &lt;a href=&quot;https://cran.r-project.org/web/packages/picante/index.html&quot;&gt;https://cran.r-project.org/web/packages/picante/index.html&lt;/a&gt;, and the original workflow can be found at &lt;a href=&quot;http://kembellab.ca/r-workshop/biodivR/SK_Biodiversity_R.html&quot;&gt;http://kembellab.ca/r-workshop/biodivR/SK_Biodiversity_R.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Arbor instance we will be using for this tutorial can be located at &lt;a href=&quot;http://52.204.9.236/#&quot;&gt;http://52.204.9.236/&lt;/a&gt;.  To prepare for the tutorial, sign in using your username and password and highlight the eyeball icon next to the KembelBiodiversityWorkshop directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot1b.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;loading-example-data&quot;&gt;Loading example data&lt;/h2&gt;

&lt;p&gt;This tutorial will use files containing species traits, species abundances, a species phylogeny, and community metadata. These files are saved in the Arbor instance, and are called:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;species.traits.csv (KembelBiodiversityWorkshop)&lt;/li&gt;
  &lt;li&gt;grassland.community.csv (KembelBiodiversityWorkshop)&lt;/li&gt;
  &lt;li&gt;plot.metadata.csv (KembelBiodiversityWorkshop)&lt;/li&gt;
  &lt;li&gt;grassland.phylogeny.newick (KembelBiodiversityWorkshop)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you wish to download and view a file, select it from the dropdown list at the bottom of the Arbor homepage and click the download button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot2.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;run-the-data-visualization-and-transformation-workflow&quot;&gt;Run the data visualization and transformation workflow&lt;/h2&gt;

&lt;p&gt;Before we run any analysis on the data, we are first going to transform and standardize it.  To accomplish this, we will use the ‘KBW.1.enter.visualize.and.transform.data.workflow (KembelBiodiversityWorkshop)’ workflow.  Begin by clicking on the ‘Analysis’ tab, then select ‘KBW.1.enter.visualize.and.transform.data.workflow (KembelBiodiversityWorkshop)’ from the dropdown menu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot3.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, click on the blue ‘Set up and run’ button.  You will see a popup box listing the outputs of the modules in your workflow.  Note the gray text next to the output; it denotes the format of the output.  For example, &lt;strong&gt;treePlot&lt;/strong&gt;’s output will be formatted as an image.  At the bottom of the box, select the input files&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;‘species.traits.csv (KembelBiodiversityWorkshop)’ for &lt;strong&gt;traits&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;‘grassland.phylogeny.newick (KembelBiodiversityWorkshop)’ for &lt;strong&gt;phylogeny&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;‘grassland.community.csv (KembelBiodiversityWorkshop)’ for &lt;strong&gt;comm&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;‘plot.metadata.csv (KembelBiodiversityWorkshop)’  for &lt;strong&gt;metadata&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To start the analysis, click the blue ‘Run’ button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot4.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now let’s have a look at the outputs of our analysis.  Outputs can be viewed under the ‘Visualization’ tab.  To access a given output, select the class of output from the dropdown menu under &lt;strong&gt;select visualization&lt;/strong&gt;.  Next, pull up the output you wish to view from the dropdown menu under &lt;strong&gt;data&lt;/strong&gt;.  Finally, click on the blue ‘Update’ button.  You can click the downward pointing chevron to the right of your login information to collapse the interface to get an unobstructed view of your output.  Clicking on this arrow a second time returns the interface to the screen.  Let’s have a look at the transformed data produced by the workflow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot5.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To download the output, return to the ‘Data Management’ tab and scroll to the bottom of the screen.  Under &lt;strong&gt;Save or download data&lt;/strong&gt; you are able to select your output from the drop down menu.  Next, select the desired file format (.png or .jpeg for images such as our plots), and click the blue ‘Download’ button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot6.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You will need to save intermediate data files to your Arbor directory to continue using them. For this tutorial, be sure to save these files into the directory called ‘KembelBiodiversityWorkshop’&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;‘KBW.1.enter.visualize.and.transform.data.workflow metadata 3.csv’&lt;/li&gt;
  &lt;li&gt;‘KBW.1.enter.visualize.and.transform.data.workflow comm.after.decostand.no.rownames.csv’&lt;/li&gt;
  &lt;li&gt;‘KBW.1.enter.visualize.and.transform.data.workflow comm.after.decostand.with.rownames.csv’&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;run-the-visualizing-and-summarizing-biodiversity-data-workflow&quot;&gt;Run the visualizing and summarizing biodiversity data workflow&lt;/h2&gt;

&lt;p&gt;This workflow allows the user to run preliminary analyses to describe differences in biodiversity between habitats.  The workflow is accessed and initiated in the same manner as before.  Start by clicking the ‘Analysis’ tab, then select ‘KBW.1.enter.visualizing.and.summarizing.biodiversity.data.workflow (KembelBiodiversityWorkshop)’ from the dropdown menu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot7.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Proceed by clicking on the blue ‘Set up and run’ button and selecting the input files.  For this analysis, we will be using files produced by the data visualization and transformation workflow.  These files contain data that have been normalized and reformatted to fit the functions contained in Arbor.  Select ‘KBW.1.enter.visualize.and.transform.data.workflow metadata 3.csv (KembelBiodiversityWorkshop)’ for &lt;strong&gt;metadata&lt;/strong&gt; and ‘KBW.1.enter.visualize.and.transform.data.workflow comm.after.decostand.no.rownames.csv (KembelBiodiversityWorkshop)’ for &lt;strong&gt;comm.total&lt;/strong&gt;.  The input &lt;strong&gt;column_to_aggregate&lt;/strong&gt;  draws its selection from the metadata file and contains several choices.  For this tutorial, select ‘habitat’.  Finally, click the blue ‘Run’ button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot8.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Our analysis has performed a t-test on the number of species between habitats and plotted the inverse Simpson’s index by habitat.  The outputs of this analysis can be visualized in the same fashion as above.  Under the ‘Visualization’ tab select a class of output from the dropdown menu under &lt;strong&gt;select visualization&lt;/strong&gt;, then select the desired output under &lt;strong&gt;data&lt;/strong&gt;.  Finally, click on the blue ‘Update’ button.&lt;/p&gt;

&lt;h2 id=&quot;run-the-multivariate-community-analysis-workflow&quot;&gt;Run the multivariate community analysis workflow&lt;/h2&gt;

&lt;p&gt;We may also be interested in performing multivariate analyses on our data.  To begin, access the multivariate community analysis workflow by clicking the ‘Analysis’ tab and selecting ‘KBW.1.multivariate.community.analysis.workflow (KembelBiodiversityWorkshop)’ from the dropdown menu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot12.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, click the blue ‘Set up and run’ button and select the input files. As before, this analysis is formatted to accept the files produced by the data visualization and transformation workflow. Select ‘KBW.1.enter.visualize.and.transform.data.workflow comm.after.decostand.with.rownames.csv (KembelBiodiversityWorkshop)’ for &lt;strong&gt;comm.total&lt;/strong&gt; and ‘KBW.1.enter.visualize.and.transform.data.workflow metadata 3.csv (KembelBiodiversityWorkshop)’ for &lt;strong&gt;metadata&lt;/strong&gt;. Initiate the analysis by clicking the blue ‘Run’ button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot13.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The outputs of this analysis can be visualized as before. Under the ‘Visualization’ tab select a class of output from the dropdown menu under &lt;strong&gt;select visualization&lt;/strong&gt;, then select the desired output under &lt;strong&gt;data&lt;/strong&gt;. Finally, click on the blue ‘Update’ button.&lt;/p&gt;

&lt;h2 id=&quot;examine-the-r-scripts-for-each-module&quot;&gt;Examine the R scripts for each module&lt;/h2&gt;

&lt;p&gt;Arbor workflows are constructed using modules that can be assembled as needed to fit the specific needs of your analysis.   To view the script for a module, click the ‘Show script’ button under the analysis tab.  You can also choose to download the module as a .json file by clicking on the blue ‘Download’ button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/KembelBiodiversity/KBWScreenshot11.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Spider</title>
    <link href="/tutorials/Spider-Tutorial/"/>
    <updated>2018-09-08T00:00:00-04:00</updated>
    <id>/tutorials/Spider-Tutorial</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;use-r-package-spider-to-analyze-species-delimitation-and-test-for-reciprocal-monophyly&quot;&gt;Use R package ‘spider’ to analyze species delimitation and test for reciprocal monophyly.&lt;/h2&gt;

&lt;p&gt;This tutorial will guide the user through the spider workflow.  Spider is an R package that includes several useful tests for DNA barcoding studies that are not contained in other comparative method-focused R packages.  Documentation on Spider can be found at &lt;a href=&quot;https://CRAN.R-project.org/package=spider&quot;&gt;https://CRAN.R-project.org/package=spider&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Arbor instance we will be using for this tutorial can be reached at &lt;a href=&quot;http://52.204.9.236/#&quot;&gt;http://52.204.9.236/&lt;/a&gt;.  To prepare for the tutorial, sign in using your username and password and highlight the eyeball icon next to the Spider directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Spider/ArborScreenshot1.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;load-the-example-data&quot;&gt;Load the example data&lt;/h2&gt;

&lt;p&gt;Species delimitation projects using molecular information require a multiple sequence alignment, with each species represented by many sequences.  This tutorial will use a &lt;em&gt;Spheniscus&lt;/em&gt; alignment that was prepared using publicly available sequences from &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/genbank/&quot;&gt;GenBank&lt;/a&gt;, and aligned using the program &lt;a href=&quot;http://www.geneious.com/download&quot;&gt;Geneious v9.0.5&lt;/a&gt;.  This file is saved in the Arbor program, and is called ‘Spheniscus_seqs_arbor.csv (Spider)’.  If you wish to download and view the file, select ‘Spheniscus_seqs_arbor.csv (Spider)’ from the dropdown list at the bottom of the Arbor homepage and click the download button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Spider/ArborScreenshot2.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;run-the-spider-workflow&quot;&gt;Run the Spider workflow&lt;/h2&gt;

&lt;p&gt;A preassembled workflow has been constructed in Arbor.  To access it, click on the ‘Analysis’ tab, then select ‘Spider2.0’ from the dropdown menu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Spider/ArborScreenshot3.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, click on the blue ‘Set up and run’ button.  You will see a popup box listing the outputs of the modules in your workflow.  Note the gray text next to the output; it denotes the format of the output.  For example, &lt;strong&gt;Phylogeny&lt;/strong&gt;’s output will be formatted as an image.  In the middle of the box, select the input file ‘Spheniscus_seqs_arbor.csv’ from the dropdown menu.  To start the analysis, click the blue ‘Run’ button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Spider/ArborScreenshot5.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now let’s have a look at the outputs of our analysis.  Outputs can be viewed under the ‘Visualization’ tab.  To access a given output, select the class of output from the dropdown menu under &lt;strong&gt;select visualization&lt;/strong&gt;.  Next, pull up the output you wish to view from the dropdown menu under &lt;strong&gt;data&lt;/strong&gt;.  Finally, click on the blue ‘Update’ button.  You can click the downward pointing chevron to the right of your login information to collapse the interface to get an unobstructed view of your output.  Clicking on this arrow a second time returns the interface to the screen.  Let’s have a look at the Phylogeny produced by the Spider2.0 workflow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Spider/ArborScreenshot6.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To download the output, return to the ‘Data Management’ tab and scroll to the bottom of the screen.  Under &lt;strong&gt;Save or download data&lt;/strong&gt; you are able to select your output from the drop down menu.  Next, select the desired file format (.png or .jpeg for images such as our phylogeny), and click the blue ‘Download’ button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Spider/ArborScreenshot7.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;examine-the-r-scripts-for-each-module&quot;&gt;Examine the R scripts for each module&lt;/h2&gt;

&lt;p&gt;Arbor workflows are constructed using modules that can be assembled as needed to fit the specific needs of your analysis.  To view the script, click the ‘Show script button’ under the analysis tab. You can also choose to download the module as a .json file by clicking on the blue ‘Download’ button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Spider/ArborScreenshot4.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>BiSSE</title>
    <link href="/arborapps/otsapps/bisse/"/>
    <updated>2018-06-07T00:00:00-04:00</updated>
    <id>/arborapps/otsapps/bisse</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      &lt;img src=&quot;/images/branch-1600x800.jpg&quot;&gt;&lt;br/&gt;
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/bisse/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/bisse/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Phylomap</title>
    <link href="/arborapps/otsapps/phylomap/"/>
    <updated>2018-06-06T00:00:00-04:00</updated>
    <id>/arborapps/otsapps/phylomap</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/phylomap/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/phylomap/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Slowdown test</title>
    <link href="/arborapps/slowdown/"/>
    <updated>2018-06-05T00:00:00-04:00</updated>
    <id>/arborapps/slowdown</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/slowdown/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/slowdown/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Map occurences</title>
    <link href="/arborapps/occurrences/"/>
    <updated>2018-06-05T00:00:00-04:00</updated>
    <id>/arborapps/occurrences</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      &lt;img src=&quot;/images/branch-1600x800.jpg&quot;&gt;&lt;br/&gt;
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/occurrences/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/occurrences/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Matrix Explorer</title>
    <link href="/arborapps/matrixExplorer/"/>
    <updated>2018-06-05T00:00:00-04:00</updated>
    <id>/arborapps/matrixExplorer</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/matrixExplorer/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/matrixExplorer/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Discrete character correlation</title>
    <link href="/arborapps/otsapps/discreteCorrelation/"/>
    <updated>2018-06-05T00:00:00-04:00</updated>
    <id>/arborapps/otsapps/discreteCorrelation</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/discreteCorrelation/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/discreteCorrelation/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Cophylo</title>
    <link href="/arborapps/otsapps/cophylo/"/>
    <updated>2018-06-05T00:00:00-04:00</updated>
    <id>/arborapps/otsapps/cophylo</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/occurrences/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/occurrences/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Plot tree using d3</title>
    <link href="/arborapps/treePlot/"/>
    <updated>2017-05-31T00:00:00-04:00</updated>
    <id>/arborapps/treePlot</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/treePlot/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/treePlot/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Stochastic character mapping using simmap</title>
    <link href="/arborapps/simmap/"/>
    <updated>2017-05-31T00:00:00-04:00</updated>
    <id>/arborapps/simmap</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/simmap/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/simmap/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Phylogenetic independent contrasts</title>
    <link href="/arborapps/pic/"/>
    <updated>2017-05-31T00:00:00-04:00</updated>
    <id>/arborapps/pic</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/PIC/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/PIC/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Lineage-through-time plots</title>
    <link href="/arborapps/otsapps/ltt/"/>
    <updated>2017-05-31T00:00:00-04:00</updated>
    <id>/arborapps/otsapps/ltt</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/ltt/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/ltt/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>PGLS - two variables only (for now!)</title>
    <link href="/arborapps/otsapps/pgls/"/>
    <updated>2017-05-30T00:00:00-04:00</updated>
    <id>/arborapps/otsapps/pgls</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      &lt;img src=&quot;/images/arborPGLS-1600x800.jpg&quot;&gt;&lt;br/&gt;
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/PGLS-twovars/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/PGLS-twovars/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Ancestral state reconstruction</title>
    <link href="/arborapps/otsapps/ancestral-state/"/>
    <updated>2017-05-29T00:00:00-04:00</updated>
    <id>/arborapps/otsapps/ancestral-state</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      &lt;img src=&quot;/images/branch-1600x800.jpg&quot;&gt;&lt;br/&gt;
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/ancestral-state/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/ancestral-state/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Phylogenetic signal</title>
    <link href="/arborapps/otsapps/phylogenetic-signal/"/>
    <updated>2017-05-28T00:00:00-04:00</updated>
    <id>/arborapps/otsapps/phylogenetic-signal</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      &lt;img src=&quot;/images/easyButtons-1600x800.jpg&quot;&gt;&lt;br/&gt;
      &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://52.204.46.78/phylogenetic-signal/&quot; /&gt;

&lt;p&gt;You should be automatically forwarded to the Arbor app. If not, click &lt;a href=&quot;http://52.204.46.78/phylogenetic-signal/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>makeBD</title>
    <link href="/collections/diversificationmodels/makeBD/"/>
    <updated>2017-01-26T00:00:00-05:00</updated>
    <id>/collections/diversificationmodels/makeBD</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;makeBD is a function for setting up a birth-death model in Arbor. Use in conjunction with fitBD.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;From the &lt;a href=&quot;/documentation/datasets/&quot;&gt;docs&lt;/a&gt; page, get anolis.phy and anolis.csv.
Load these files into Arbor, and …&lt;/p&gt;

&lt;h2 id=&quot;arguments&quot;&gt;Arguments&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;table: A data table including species names&lt;/li&gt;
  &lt;li&gt;tree: A phylogenetic tree&lt;/li&gt;
  &lt;li&gt;column: The name of the column to analyze&lt;/li&gt;
  &lt;li&gt;type: The character type
    &lt;ul&gt;
      &lt;li&gt;discrete: a character with a discrete number of states&lt;/li&gt;
      &lt;li&gt;continuous: a continuously varying character&lt;/li&gt;
      &lt;li&gt;fromData: will attempt to determine the data type from the data itself&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;method: specifies the method used to reconstruct ancestral character states
    &lt;ul&gt;
      &lt;li&gt;marginal: marginal ancestral state reconstructions, which reconstruct each node integrating over all possibilities at all other nodes in the tree; this is typically the method used in the literature to reconstruce ACEs&lt;/li&gt;
      &lt;li&gt;joint: joint ancestral reconstructions, which give the configuration of ancestral states that together maximize the likelihood of the data given model parameters&lt;/li&gt;
      &lt;li&gt;mcmc: reconstruct ancestral states using Bayesian MCMC. Note that the discrete version of this doesn’t seem to work, and even if it did work it is not a full MCMC ancestral state method&lt;/li&gt;
      &lt;li&gt;stochastic: create stochastic character map&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;outputs&quot;&gt;Outputs&lt;/h2&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

    </content>
  </entry>
  
  <entry>
    <title>Web services 2</title>
    <link href="/tutorials/webservices/"/>
    <updated>2017-01-08T00:00:00-05:00</updated>
    <id>/tutorials/webservices</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;what-are-web-services&quot;&gt;What are web services?&lt;/h2&gt;

&lt;p&gt;Web services are protocols for computers to exchange information over the web (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_service&quot;&gt;wikipedia: web service&lt;/a&gt;), typically via an &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_programming_interface&quot;&gt;API&lt;/a&gt;. In biology, web services are becoming more and more common. You can obtain, for example, phylogenetic trees from &lt;a href=&quot;http://opentreeoflife.org/&quot;&gt;Open Tree of Life&lt;/a&gt;, geographic occurrences from &lt;a href=&quot;http://www.gbif.org/&quot;&gt;GBIF&lt;/a&gt;, and trait data from &lt;a href=&quot;http://eol.org/&quot;&gt;Encyclopedia of Life&lt;/a&gt;, all using web services.&lt;/p&gt;

&lt;p&gt;We have a number of pre-made functions in Arbor that can obtain data through web services. These functions can be included in workflows that make it easy to combine your data with data obtained over the web and carry out analyses. In this tutorial we will illustrate one of these applications, starting with a list of species and obtaining a phylogenetic tree from Open Tree of Life.&lt;/p&gt;

&lt;h2 id=&quot;example-from-a-list-of-species-to-a-phylogenetic-tree&quot;&gt;Example: from a list of species to a phylogenetic tree&lt;/h2&gt;

&lt;p&gt;We are going to start with a list of species. You can obtain this list as a csv file &lt;a href=&quot;/assets/mammal_species_list.csv&quot;&gt;here&lt;/a&gt;; download and save this file somewhere to your computer.&lt;/p&gt;

&lt;p&gt;Now, open an Arbor instance (e.g. &lt;a href=&quot;http://arbor.arborworkflows.com&quot;&gt;Arbor web app&lt;/a&gt;). You will now need to load in your species list. You can do this by dragging the file that you just downloaded onto the “Browse or drop files” box:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen1.png&quot; alt=&quot;screen1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(you can also see our tutorial on &lt;a href=&quot;/tutorials/using-the-arbor-webapp/&quot;&gt;using the Arbor webapp&lt;/a&gt;) for more information on loading data into Arbor)&lt;/p&gt;

&lt;p&gt;We will be building a workflow to do this analysis. Note that you need to be logged in and have write access to a collection to make the next parts work!&lt;/p&gt;

&lt;p&gt;Click over to the “Analysis” tab, and create a new workflow. To do that, type the name of the new workflow it the box under “Create new analysis.” Let’s call our workflow “getOTLTreeAndPlot.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen2.png&quot; alt=&quot;screen2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you have created the workflow, you should be able to view and edit (but right now it is just a blank white space!)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen3.png&quot; alt=&quot;screen3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first step in this workflow is to match the species names with the names in the Open Tree of Life Taxonomy (OTT). To do this, we will use a function in the “advanced-opentree” collection called “Lookup Names Using OpenTree Taxonomy.” Add this function to your workflow using the “+ add to workflow” button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen4.png&quot; alt=&quot;screen4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can click the tab on the left side of that new workflow step to indicate that the user will send a data table directly to this function. So our workflow is now:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen5.png&quot; alt=&quot;screen5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we need to pull out an “induced subtree” from open tree of life using the OTT ids that we obtained in the previous step. To do that, add a new function to your workflow, again from the “advanced-opentree” collection: “Return the Open Tree Subtree from a node list.” Add and connect that next step to your workflow:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen6.png&quot; alt=&quot;screen6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we just need to plot our resulting tree. You can use a function from the “advanced-phylogenyTools” collection called “PlotTreeWithApe.” Add that function, connect it to your workflow, and specify that the last output be sent to the user:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen7.png&quot; alt=&quot;screen7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now just click “Setup and run.” In the box that appears, choose your input file with the list of mammal species names.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen8.png&quot; alt=&quot;screen8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The workflow will run for a while:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen9.png&quot; alt=&quot;screen9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And then finish:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen10.png&quot; alt=&quot;screen10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can then change to the “visualization” tab, and select the output from your workflow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen11.png&quot; alt=&quot;screen11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We then see the final result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webServices/webserv-screen12.png&quot; alt=&quot;screen12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a phylogenetic tree pulled from the Open Tree of Life synthesis that includes all of the species in the table that you supplied.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Creating new collections and functions</title>
    <link href="/tutorials/functions-and-collections/"/>
    <updated>2017-01-06T00:00:00-05:00</updated>
    <id>/tutorials/functions-and-collections</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;how-to-make-your-own-collection-of-arbor-functions-and-workflows&quot;&gt;How to make your own collection of Arbor functions and workflows&lt;/h2&gt;

&lt;p&gt;When working in Arbor, you will be uploading your own data, and may want to create your own functions and workflows. Everything in Arbor is organized into collections (for example, the phylogeny and base collections). You can create your own collection to store data and workflows. Later I will discuss how you can share any items in your collection with colleagues.&lt;/p&gt;

&lt;h2 id=&quot;get-started&quot;&gt;Get started&lt;/h2&gt;

&lt;p&gt;You will need to open the &lt;a href=&quot;http://arbor.arborworkflows.com&quot;&gt;Arbor web app&lt;/a&gt;. For this exercise, you will need to log in; your user name should match the personal part of the email address you used to register for the meeting. For example, if your registration email is lukeh@uidaho.edu, then your user name is lukeh. Your password will be given to you by the instructor.&lt;/p&gt;

&lt;p&gt;Once you are logged in, your screen should look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/screen1.png&quot; alt=&quot;Screenshot 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You will need the anolis example data files, &lt;a href=&quot;/assets/datasets/anolis.phy&quot;&gt;anolis.phy&lt;/a&gt; and &lt;a href=&quot;/assets/datasets/anolis.csv&quot;&gt;anolis.csv&lt;/a&gt;. Save those files somewhere on your computer.&lt;/p&gt;

&lt;h2 id=&quot;create-a-new-collection&quot;&gt;Create a new collection&lt;/h2&gt;

&lt;p&gt;On the left side of the screen, just below the “Browse or drop files” box, is the place you will need to focus to create your new collection. In the box there you can type the name of a new collection - let’s use &lt;em&gt;testCollection&lt;/em&gt; here, so type that in the box. If you want the collection to be public, you can tick the &lt;em&gt;public&lt;/em&gt; box. Otherwise, the collection will be private and only visible to you. Keep this test collection private for this example. Now click the “New collection” button, and your collection will be created.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/screen2.png&quot; alt=&quot;Screenshot 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Immediately after creating my new collection. Did it work?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Scroll down to see more collections, the one you just created will be at the bottom. Click on both the “eye” and the “pencil” next to your collection. The “eye” lets you see the things in your collection, and the pencil gives write access so that you can add things to the collection (and delete!).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/screen3.png&quot; alt=&quot;Screenshot 3&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;saving-data-to-your-new-collection&quot;&gt;Saving data to your new collection&lt;/h2&gt;

&lt;p&gt;Once you have created your collection, you can add data to it. Drag the “anolis.csv” file to the “Browse or drop files” box to load it into your browser. You can now save this file to your new collection. To do that, scroll down to the very bottom of the bottom browser frame, where you should see “Save or download data.” “anolis.csv” should show up there.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/screen4.png&quot; alt=&quot;Screenshot 4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As long as the pencil next to your new collection is highlighted, you can now click “Save to checked collection” to save this data file to the new collection. Try that now. The name of the collection should show up next to the datafile:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/screen5.png&quot; alt=&quot;Screenshot 5&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-new-analyses-and-workflows-in-your-new-collection&quot;&gt;Creating new analyses and workflows in your new collection&lt;/h2&gt;

&lt;p&gt;Now, move over to the “Analysis” tab. You can create new analyses and workflows in your new collection by clicking on “+ New analysis” or “+ New workflow.”&lt;/p&gt;

&lt;p&gt;Let’s start with a simple new analysis. We can create a function that will automatically multiply all the branch lengths in our tree by some factor, x. We will call this new function “multiplyBranchLengths.” Our function will have two inputs, a phylogenetic tree and a branch multiplier x, and a single output, the rescaled tree.&lt;/p&gt;

&lt;p&gt;The first thing to do is to create our new analysis. Put the function name, “multiplyBranchLengths,” in the box under “Create new analysis.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor1.png&quot; alt=&quot;Screenshot ssbarbor1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, push the button that says “New analysis.”&lt;/p&gt;

&lt;p&gt;You have just created an (empty) analysis. Now click “Show script” and “Edit” to allow us to put some code into our analysis. You should also change the language to “R” instead of “Python” (look in the row of options after &amp;gt;Setup and run). Your screen should now look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor2.png&quot; alt=&quot;Screenshot ssbarbor2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can now paste a snippet of R code into this window to make our analysis happen. All we need is two lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rescaledPhy &amp;lt;- phy
rescaledPhy$edge.length &amp;lt;- rescaledPhy$edge.length * x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Paste that into your analysis:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor3.png&quot; alt=&quot;Screenshot ssbarbor3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We now need to specify the function inputs and outputs. First, click the small “+” button next to “Inputs” at the bottom of the page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor4.png&quot; alt=&quot;Screenshot ssbarbor4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can then specify a name for this input, as well as its Id in the code. Fill out the “Configure input” box like this, then click “Update”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor5.png&quot; alt=&quot;Screenshot ssbarbor5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Do the same thing to create a second input for our branch multiplier, but with the “Configure input” box filled out for a number:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor6.png&quot; alt=&quot;Screenshot ssbarbor6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you do this right, you should see the Inputs specified:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor7.png&quot; alt=&quot;Screenshot ssbarbor7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, make an output by clicking the + next to “Outputs.” Fill out the “Configure output” box:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor8.png&quot; alt=&quot;Screenshot ssbarbor8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you can see all of your inputs and outputs:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor9.png&quot; alt=&quot;Screenshot ssbarbor9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;OK! Make sure to click “Save” to save all of your work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor10.png&quot; alt=&quot;Screenshot ssbarbor10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You should see a confirmation that your work is saved:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor11.png&quot; alt=&quot;Screenshot ssbarbor11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, let’s try running your new function. Once you have saved the function, click on “&amp;gt; Setup and run.” Fill out the box that appears:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor12.png&quot; alt=&quot;Screenshot ssbarbor12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the function runs, you should get a green success message:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor13.png&quot; alt=&quot;Screenshot ssbarbor13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, we will try to use this rescaled tree to do something.&lt;/p&gt;

&lt;h2 id=&quot;building-a-workflow-that-includes-your-new-function&quot;&gt;Building a workflow that includes your new function&lt;/h2&gt;

&lt;p&gt;We will now build a workflow that includes two steps: rescaling your tree, and then fitting a model of evolution for a trait on that rescaled tree.&lt;/p&gt;

&lt;p&gt;Create a new analysis called “rescaledTraitEvo,” but this time make sure to click the button that says “New workflow.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor14.png&quot; alt=&quot;Screenshot ssbarbor14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As long as you have “Show script” and “Edit” active, you should see a blank space where your workflow will go.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor15.png&quot; alt=&quot;Screenshot ssbarbor15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s add the two functions that will be part of our workflow. First. using the “Select analysis” chooser, find your new function (multiplyBranchLengths) and use the “+Add to workflow” button to add it to your workflow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor16.png&quot; alt=&quot;Screenshot ssbarbor16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you do that, your function should appear as a workflow block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor17.png&quot; alt=&quot;Screenshot ssbarbor17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now add a block for the other function you need, “fit discrete.” It is part of the “traitModels” collection, so make sure that collection is highlighted as visible under the Data Management tab.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor18.png&quot; alt=&quot;Screenshot ssbarbor18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now select the function you need and click “+Add to workflow”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor19.png&quot; alt=&quot;Screenshot ssbarbor19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Shazam! the function appears in your workflow. But wait? What happened to the other function?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor20.png&quot; alt=&quot;Screenshot ssbarbor20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Don’t worry, it was just hiding underneath.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor21.png&quot; alt=&quot;Screenshot ssbarbor21&quot; /&gt;&lt;/p&gt;

&lt;p&gt;OK, now we just need to wire this workflow together! First, we know that the output tree from “multiplyBranchLengths” goes to the input tree of “Fit continuous.” Connect those two with a wire.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor22.png&quot; alt=&quot;Screenshot ssbarbor22&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Everything else is a user input or output. To create those, just click on each tab.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor23.png&quot; alt=&quot;Screenshot ssbarbor23&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You might need to move things around to make the workflow look nice.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor24.png&quot; alt=&quot;Screenshot ssbarbor24&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make sure to save your workflow!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor25.png&quot; alt=&quot;Screenshot ssbarbor25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can now use the “&amp;gt; Setup and run” button to run our workflow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor26.png&quot; alt=&quot;Screenshot ssbarbor26&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Designate these inputs:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor27.png&quot; alt=&quot;Screenshot ssbarbor27&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It worked!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor28.png&quot; alt=&quot;Screenshot ssbarbor28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can see the results in the Visualization tab:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor29.png&quot; alt=&quot;Screenshot ssbarbor29&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click “Update”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor30.png&quot; alt=&quot;Screenshot ssbarbor30&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Compare this to what we get with the original tree. Notice any differences? Explain!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/ssbarbor31.png&quot; alt=&quot;Screenshot ssbarbor31&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;loading-a-shared-workflow-to-your-collection&quot;&gt;Loading a shared workflow to your collection&lt;/h2&gt;

&lt;p&gt;Next, I will show you how to load in a workflow file that has been downloaded in JSON format. Imagine, for example, that a colleague emailed you an arbor workflow called mywork.json. You can download such a file &lt;a href=&quot;/assets/creatingaCollection/fitTraitModels.json&quot;&gt;here&lt;/a&gt;. (NOTE: you might have to right-click and “save as” for this file, or save as plain text with extension .json if it opens in your browser). Now, to load that workflow into your new collection, click on “Upload… “ and find the fitTraitModels.json file. The new workflow is now in your collection!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/screen6.png&quot; alt=&quot;Screenshot 6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see the new workflow by clicking “Show script.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creatingaCollection/screen7.png&quot; alt=&quot;Screenshot 7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can even edit this workflow using the “Edit” button (keep in mind that you have to hit “Save” for the changes to go into effect).&lt;/p&gt;

&lt;p&gt;Finally, you can download your new workflow using the “Save” button, which generates a json-formatted version of your workflow. This text file includes all of the information and code that you need to run your workflow - but not the data! You can easily share these json files with collaborators or make them available on Github or other archives.&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Using the Arbor webapp</title>
    <link href="/tutorials/runningfunctions/"/>
    <updated>2017-01-05T00:00:00-05:00</updated>
    <id>/tutorials/runningfunctions</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;how-to-run-functions-for-comparative-analyses-in-arbor&quot;&gt;How to run functions for comparative analyses in Arbor&lt;/h2&gt;

&lt;p&gt;So, you want to use the Arbor web app to do some comparative analyses?&lt;/p&gt;

&lt;p&gt;The Arbor web app is a flexible workflow engine that will let you carry out a wide range of visualizations
and analyses. You can upload data files from your computer, or use data from a range of web services.&lt;/p&gt;

&lt;p&gt;For this example, I will walk you through the steps you need to use the Arbor web app. I will set up a
basic analysis of a correlation between two continuous characters using independent contrasts.&lt;/p&gt;

&lt;h2 id=&quot;get-started&quot;&gt;Get started&lt;/h2&gt;

&lt;p&gt;You will need the anolis example data files, &lt;a href=&quot;/assets/datasets/anolis.phy&quot;&gt;anolis.phy&lt;/a&gt; and &lt;a href=&quot;/assets/datasets/anolis.csv&quot;&gt;anolis.csv&lt;/a&gt;. Save those files somewhere on your computer.&lt;/p&gt;

&lt;p&gt;Now open the &lt;a href=&quot;http://arbordev.arborworkflows.com&quot;&gt;Arbor web app&lt;/a&gt; (this is a special instance of Arbor hosted on Amazon Web Services just for this meeting). Your screen should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/usingArborwebapp_1.png&quot; alt=&quot;Screenshot 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You might notice some differences between this screen and the particular collections that are available to you - don’t worry too much about that.&lt;/p&gt;

&lt;p&gt;If you want, you can log in here; your user name should match the personal part of the email address you used to register for the meeting. For example, if your registration email is lukeh@uidaho.edu, then your user name is lukeh. The password will be given to you by the instructor. Note also that for this and some other examples in the workshop,  you don’t actually need to log in, you can do the analyses on the web without an account.&lt;/p&gt;

&lt;h2 id=&quot;upload-your-data&quot;&gt;Upload your data&lt;/h2&gt;

&lt;p&gt;Near the bottom of the Arbor web app screen you will see a blue box that says “Browse or drop files.” This is how you can get your data into Arbor. There are two options: either you can click the box and browse to the file you want, or you can drag the file onto the box and let go. Arbor should recognize what type of file you have added (in this case, tree or datafile) and store them in the correct way.&lt;/p&gt;

&lt;p&gt;Using this method, load in both anolis.phy and anolis.csv. If you want to make sure that your upload worked, you can use the dropdown menu that says “Save or download data.” If you have properly loaded the files you will see them appear in that list.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/usingArborwebapp_2.png&quot; alt=&quot;Screenshot 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is what my screen looks like after uploading anolis.csv - note that anolis.phy is also in the “Save or download data” dropdown, as I uploaded it just before.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Note: Since you have not added your files to any collections, they will appear like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;anolis.csv&lt;/li&gt;
  &lt;li&gt;anolis.phy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may also see the same files stored in a collection, depending on how your web app is set up. If you see versions of those stored files from the “sampleDatasets” collection, for example, they will look like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;anolis.csv (sampleDatasets)&lt;/li&gt;
  &lt;li&gt;anolis.phy (sampleDatasets)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those stored files will work fine for the exercise, but try to use the ones you uploaded so that you can get the hang of using your own data in Arbor. Also, since these datasets are uploaded but not saved, if you &lt;strong&gt;refresh your browser&lt;/strong&gt; or even &lt;strong&gt;accidentally go to a different page&lt;/strong&gt;, the datasets will be gone when you come back. If you want to save your uploaded data then you should login and make a personal collection.&lt;/p&gt;

&lt;h2 id=&quot;select-the-collections-you-want&quot;&gt;Select the collections you want&lt;/h2&gt;

&lt;p&gt;For this exercise, you will use functions from one arbor collections, “generalLinearModels.” This collection contains functions to test for linear relationships among a set of variables. All available collections are listed to the right side of the Data Management tab.&lt;/p&gt;

&lt;p&gt;To gain access to functions in those collections, click the little eyeball next to “generalLinearModels.” Your screen should now look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/usingArborwebapp_3_alt.png&quot; alt=&quot;Screenshot 3&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;navigate-to-the-analysis-tab&quot;&gt;Navigate to the “analysis” tab&lt;/h2&gt;

&lt;p&gt;You are done with the Data Management tab, and will need to move to the “Analysis” tab to carry out your analysis. Click on the Analysis tab to switch. Your screen should now look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/alt_4.png&quot; alt=&quot;Screenshot 4&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;try-out-the-piccorrelation-function&quot;&gt;Try out the picCorrelation &lt;strong&gt;function&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;We can now do some comparative analyses! Arbor has two types of analyses: functions and workflows. Later, we will build a workflow - but actually, for this problem, there is a single function that we can use to get output immediately.&lt;/p&gt;

&lt;p&gt;The function we need is called &lt;strong&gt;picCorrelation&lt;/strong&gt;, and it is part of the &lt;em&gt;generalLinearModels&lt;/em&gt; collection.&lt;/p&gt;

&lt;p&gt;First, select this function (in the &lt;em&gt;Select analysis&lt;/em&gt; dropdown menu). You can inspect the function by clicking “Show script” (this example is in R). You should see this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/usingArborwebapp_5.png&quot; alt=&quot;Screenshot 5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can now run the function by clicking the small blue button that says “&amp;gt; Setup and run.” This brings up a dialog box. Fill in the missing details in this box to analyze hostility (dep_variable) as a function of awesomeness (ind_variable). Choose the table and tree that you entered earlier, and set “plotPICs” to “yes.” Your form should look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/usingArborwebapp_6.png&quot; alt=&quot;Screenshot 6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now press “&amp;gt; Run” and see what happens. If your run works, you should see a &lt;em&gt;success&lt;/em&gt; message:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/usingArborwebapp_7.png&quot; alt=&quot;Screenshot 7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here, Arbor is telling us that the function had two outputs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;picCorrelation picPlot, which is an &lt;em&gt;image&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;picCorrelation tableResults, which is a &lt;em&gt;table&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s have a look at the outputs.&lt;/p&gt;

&lt;h2 id=&quot;visualize-the-outputs-of-the-piccorrelation-function&quot;&gt;Visualize the outputs of the picCorrelation function&lt;/h2&gt;

&lt;p&gt;To see the outputs of an Arbor function (or workflow) we can go to the &lt;strong&gt;Visualization&lt;/strong&gt; tab. Click on it now. Your screen should look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/usingArborwebapp_8.png&quot; alt=&quot;Screenshot 8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that the top part of the screen did not change, but the bottom tabs and buttons did. That’s ok! Keep going.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We can look at the plot first. Set the “Select visualization” dropdown to “image”, and you should see your output, called “picCorrelation picPlot”, appear under “data.” To activate this visualization click on the blue &lt;strong&gt;Update&lt;/strong&gt; button. The result should be a plot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/usingArborwebapp_9.png&quot; alt=&quot;Screenshot 9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(You can see more of the plot by clicking on the small downward-facing arrow above the “Log In or Register” section of the screen).&lt;/p&gt;

&lt;p&gt;Next, let’s see some numbers. Change “Select visualization” to “table”, and “data” to “picCorrelation tableResults.” Hit update again to see an ANOVA table summarizing the results of the phylogenetic regression.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/usingArborwebapp/usingArborwebapp_10.png&quot; alt=&quot;Screenshot 10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The p-value is the top number in the column denoted “Pr(&amp;gt;F).”&lt;/p&gt;

    </content>
  </entry>
  
  <entry>
    <title>Example datasets</title>
    <link href="/media/datasets/"/>
    <updated>2017-01-04T00:00:00-05:00</updated>
    <id>/media/datasets</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;p&gt;Example datasets that you need for &lt;a href=&quot;/tutorials/&quot;&gt;tutorials&lt;/a&gt; and other activities on this site. These also have &lt;a href=&quot;/documentation/&quot;&gt;documentaion&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Anolis data: &lt;a href=&quot;/assets/datasets/anolis.csv&quot;&gt;anolis.csv&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Anolis tree: &lt;a href=&quot;/assets/datasets/anolis.phy&quot;&gt;anolis.phy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

    </content>
  </entry>
  
  <entry>
    <title>bisseMLE</title>
    <link href="/collections/diversificationmodels/bisseMLE/"/>
    <updated>2017-01-04T00:00:00-05:00</updated>
    <id>/collections/diversificationmodels/bisseMLE</id>
    <author>
      <name>Luke Harmon</name>
      <uri>/</uri>
      <email>lukeh@uidaho.edu</email>
    </author>
    <content type="html">
      
      &lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;bisseMLE is a function for finding the maximum-likelihood parameter estimates for a BiSSE model.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;From the &lt;a href=&quot;/documentation/datasets/&quot;&gt;docs&lt;/a&gt; page, get anolis.phy and anolis.csv.
Load these files into Arbor, and …&lt;/p&gt;

&lt;h2 id=&quot;arguments&quot;&gt;Arguments&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;table: A data table including species names&lt;/li&gt;
  &lt;li&gt;tree: A phylogenetic tree&lt;/li&gt;
  &lt;li&gt;column: The name of the column to analyze&lt;/li&gt;
  &lt;li&gt;type: The character type
    &lt;ul&gt;
      &lt;li&gt;discrete: a character with a discrete number of states&lt;/li&gt;
      &lt;li&gt;continuous: a continuously varying character&lt;/li&gt;
      &lt;li&gt;fromData: will attempt to determine the data type from the data itself&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;method: specifies the method used to reconstruct ancestral character states
    &lt;ul&gt;
      &lt;li&gt;marginal: marginal ancestral state reconstructions, which reconstruct each node integrating over all possibilities at all other nodes in the tree; this is typically the method used in the literature to reconstruce ACEs&lt;/li&gt;
      &lt;li&gt;joint: joint ancestral reconstructions, which give the configuration of ancestral states that together maximize the likelihood of the data given model parameters&lt;/li&gt;
      &lt;li&gt;mcmc: reconstruct ancestral states using Bayesian MCMC. Note that the discrete version of this doesn’t seem to work, and even if it did work it is not a full MCMC ancestral state method&lt;/li&gt;
      &lt;li&gt;stochastic: create stochastic character map&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;outputs&quot;&gt;Outputs&lt;/h2&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

    </content>
  </entry>
  
  
</feed>